<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- Mapper 인터페이스와 연결하는 방법 : namespace 속성 값으로 Mapper 인터페이스의 패키지명 + 인터페이명 작성 -->
<mapper namespace="edu.kh.repet.board.mapper.BoardMapper">
  
 

	<!-- boardCode가 일치하는 개시글의 전체 개수 조회 -->
	<select id="getListCount" resultType="_int">
		SELECT COUNT(*)
		FROM "BOARD"
		WHERE BOARD_CODE = #{boardCode}
		AND   BOARD_DEL_FL = 'N'
	</select>
	
	
	<!-- <![CDATA[ "문자열" ]]> -->
	
	<!-- 지정된 페이지의 게시글 조회 -->
	<select id="selectBoardList" resultType="BOARD">
		SELECT 
		      ROW_NUMBER() OVER (ORDER BY BOARD_NO ASC) AS "RNUM",
		      BOARD_NO,
		      BOARD_TITLE,
		      READ_COUNT,
		      MEMBER_NICKNAME,
		      (SELECT COUNT(*) FROM "BOARD_COMMENT" C
		       WHERE C.BOARD_NO = B.BOARD_NO ) AS "COMMENT_COUNT",
      
      
	      
	       
	       <![CDATA[
	       CASE
	          WHEN CURRENT_DATE - BOARD_WRITE_DATE < 1 / 24 / 60
	          THEN FLOOR( (CURRENT_DATE - BOARD_WRITE_DATE)
	                       * 24 * 60 * 60 ) || '초 전'
	                       
	          WHEN CURRENT_DATE - BOARD_WRITE_DATE < 1 / 24
	          THEN FLOOR( (CURRENT_DATE - BOARD_WRITE_DATE)
	                       * 24 * 60 ) || '분 전'        
	                       
	        WHEN CURRENT_DATE - BOARD_WRITE_DATE < 1 
	          THEN FLOOR( (CURRENT_DATE - BOARD_WRITE_DATE)
	                       * 24  ) || '시간 전'
	                       
	          ELSE TO_CHAR(BOARD_WRITE_DATE, 'YYYY-MM-DD')
	       
	       END AS "BOARD_WRITE_DATE"
	       ]]>
       
	FROM      "BOARD" B
	JOIN "MEMBER" M ON (B.MEMBER_NO = M.MEMBER_NO)
	WHERE BOARD_DEL_FL = 'N' 
	AND   BOARD_CODE = #{boardCode}  
	ORDER BY RNUM DESC
	</select>
	
	
	<!-- 게시글 상세 조회 -->
    <select id="boardDetail" parameterType="map" resultType="Board">
        SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITE_DATE, BOARD_UPDATE_DATE, READ_COUNT,
               B.MEMBER_NO, BOARD_CODE, MEMBER_NICKNAME, PROFILE_IMG,
               
               (SELECT COUNT(*) FROM BOARD_LIKE WHERE BOARD_NO = B.BOARD_NO) AS LIKE_COUNT,
               
               (SELECT COUNT(*)
			 FROM "BOARD_LIKE"
			 WHERE BOARD_NO = #{boardNo}
			 AND   MEMBER_NO = #{memberNo}) AS LIKE_CHECK
               
        FROM BOARD B
        JOIN MEMBER M ON (B.MEMBER_NO = M.MEMBER_NO)
        WHERE BOARD_NO = #{boardNo} AND BOARD_CODE = #{boardCode} AND BOARD_DEL_FL = 'N'
    </select>
    
    <update id="updateReadCount">
    	UPDATE "BOARD" 
   		SET READ_COUNT = READ_COUNT + 1
   		WHERE BOARD_NO = #{boardNo}
    </update>
    
    
    <select id="selectTop5Boards" resultType="Board">
    SELECT B.BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, READ_COUNT, BOARD_WRITE_DATE
    FROM BOARD B
    JOIN MEMBER M ON (M.MEMBER_NO = B.MEMBER_NO)
    WHERE BOARD_DEL_FL = 'N'
    ORDER BY READ_COUNT DESC
    FETCH FIRST 5 ROWS ONLY
	</select>


	<select id="checkBoardLike" resultType="_int">
		SELECT COUNT(*)
   		FROM "BOARD_LIKE"
   		WHERE BOARD_NO  = #{boardNo}
   		AND   MEMBER_NO = #{memberNo}
	</select>
	
	<insert id="insertBoardLike">
		INSERT INTO "BOARD_LIKE" 
   		VALUES(#{boardNo}, #{memberNo})
	</insert>

	
	<insert id="deleteBoardLike">
		DELETE FROM "BOARD_LIKE"
   		WHERE BOARD_NO  = #{boardNo}
   		AND   MEMBER_NO = #{memberNo}
	</insert>
	
	<select id="getLikeCount" resultType="_int">
		SELECT COUNT(*)
   		FROM "BOARD_LIKE"
   		WHERE BOARD_NO = #{boardNo}
	</select>
	
	
	<select id="getcurrentPage" resultType="_int">
		SELECT CEIL(RNUM / #{limit}) AS CPAGE
    FROM (
        SELECT
            ROW_NUMBER() OVER(ORDER BY BOARD_NO DESC) AS RNUM,
            BOARD_NO
        FROM "BOARD"
    ) T
    WHERE T.BOARD_NO = #{boardNo}
	</select>
	
	
	<!-- 검색 조건이 맞는 게시글 수 조회 -->
   <select id="getSearchCount" resultType="_int">
   		SELECT COUNT(*)
		FROM "BOARD"
		<if test='key == "w"'>
			JOIN "MEMBER" USING (MEMBER_NO)
		</if>
		
		WHERE BOARD_CODE = #{boardCode}
		AND   BOARD_DEL_FL = 'N'
		
		<choose>
			<!-- 제목 검색인 경우 -->
			<when test='key == "t"'>
				AND   BOARD_TITLE LIKE '%' || #{query} || '%'
			</when>

			<!-- 내용 검색인 경우 -->
			<when test='key == "c"'>
				AND   BOARD_CONTENT LIKE '%' || #{query} || '%'
			</when>

			
			<!-- 작성자 검색인 경우 -->
			<when test='key == "w"'>
				AND   MEMBER_NICKNAME LIKE '%' || #{query} || '%'
			</when>
		</choose>
   
   </select>
	
	
	
	<select id="searchBoard" parameterType="map" resultType="Board">
    SELECT 	
    	ROW_NUMBER() OVER (ORDER BY BOARD_NO ASC) AS "RNUM",
		BOARD_NO,
		BOARD_TITLE,
		READ_COUNT,
		MEMBER_NICKNAME,
		(SELECT COUNT(*) FROM BOARD_COMMENT C
		 WHERE C.BOARD_NO = B.BOARD_NO 
		 AND   C.COMMENT_DEL_FL = 'N') AS "COMMENT_COUNT",
		 
		 
		 <![CDATA[
		 CASE
		 	WHEN CURRENT_DATE - BOARD_WRITE_DATE < 1 / 24 / 60
		 	THEN FLOOR( (CURRENT_DATE - BOARD_WRITE_DATE)
		 	             * 24 * 60 * 60 ) || '초 전'
		 	             
		 	WHEN CURRENT_DATE - BOARD_WRITE_DATE < 1 / 24
		 	THEN FLOOR( (CURRENT_DATE - BOARD_WRITE_DATE)
		 	             * 24 * 60 ) || '분 전'        
		 	             
     	WHEN CURRENT_DATE - BOARD_WRITE_DATE < 1 
		 	THEN FLOOR( (CURRENT_DATE - BOARD_WRITE_DATE)
		 	             * 24  ) || '시간 전'
		 	             
		 	ELSE TO_CHAR(BOARD_WRITE_DATE, 'YYYY-MM-DD')
		 
		 END AS "BOARD_WRITE_DATE"
		 ]]>
		 
    FROM  BOARD B
    JOIN  MEMBER M ON (B.MEMBER_NO = M.MEMBER_NO)
    WHERE BOARD_CODE = 2
    AND   BOARD_DEL_FL = 'N'
    <choose>
    <when test='key == "t"'>
        AND BOARD_TITLE LIKE '%' || #{query} || '%'
    </when>
    <when test='key == "c"'>
        AND BOARD_CONTENT LIKE '%' || #{query} || '%'
    </when>
    <when test='key == "w"'>
        AND MEMBER_NICKNAME LIKE '%' || #{query} || '%'
    </when>
</choose>

	ORDER BY RNUM DESC
</select>















</mapper>
