<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="edu.kh.repet.flea.mapper.EditFleaMapper">

    <!--
		시퀀스를 이용해서 다음 boardNo를 생성한 후
		제출된 Board 객체에 boardNo를 세팅!!!

		왜? 동시에 시퀀스로 번호를 발생 시킬 가능성이 있기 떄문에
		미리 번호를 생성

		방법 : 얕은 복사의 특징(모두 원본 참조)(주소만 복사) 을 이용해서
			   mapper에서 세팅한 값을 controller, service에서 사용 가능하게 함
	-->

    <!--
        useGeneratedKeys 속성
        - DB에서 내부적으로 생성된 KEY(시퀀스)를 사용할 수 있는 상태 여부 지정
        ==> 전달 받은 파라미터 객체의 필드에 대입 가능

        ** 동적 SQL **
        - 프로그램 수행 중 SQL을 변경하는 기능 (마이바티스의 가장 강력한 기능)

        <selectKey> 태그 : INSERT/UPDATE 시 사용할 키(시퀀스)를
                        조회해서 파라미터의 지정된 필드에 대입

        order 속성 : 메인 SQL이 수행되기 전/후에 selectkey가 수행되도록 지정
        전 : BEFORE
        후 : AFTER

        keyProperty 속성 : selectKey 조회 결과를 저장할 파라미터의 필드
    -->



    <!-- 게시글 글 부분 insert-->
    <insert id="boardInsert" parameterType="Flea" useGeneratedKeys="true">

        <selectKey order="BEFORE" resultType="_int" keyProperty="boardNo">
            SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL
        </selectKey>

        INSERT INTO "BOARD"
                    (BOARD_NO, BOARD_TITLE, BOARD_CONTENT,
                     BOARD_WRITE_DATE, BOARD_UPDATE_DATE, READ_COUNT, BOARD_DEL_FL,
                     MEMBER_NO, BOARD_CODE)
        VALUES (    #{boardNo}, #{boardTitle}, #{boardContent},
                    DEFAULT, NULL, DEFAULT, DEFAULT,
                    #{memberNo}, 3)


    </insert>

    <!-- 중고거래 부분 insert -->
    <!-- @Param("inputFlea") Flea inputFlea, @Param("boardNo") int boardNo -->
    <insert id="fleaInsert" parameterType="Flea">
        INSERT INTO "FLEA_BOARD"
                    (PRICE, GOODS)
        VALUES  (   #{price}, #{goods})
        WHERE   BOARD_NO = #{board_no}
    </insert>

    <!-- board_img 에 이미지 등록-->
    <insert id="insertUploadList">
        INSERT INTO "BOARD_IMG"
        <foreach collection="list" item="img"
                 open="(" close=")" separator=" UNION ALL ">
            SELECT
                NEXT_IMG_NO(),
                #{img.imgPath},
                #{img.imgRename},
                #{img.boardNo}
            FROM DUAL
        </foreach>
    </insert>
    


<!--




    /**
    * 게시글 삭제
    * @param memberNo
    * @param boardNo
    * @return
    */
    int fleaDelete(int memberNo, int boardNo);









    /** 1-1
    * 게시글 수정(제목/내용)
    * @param inputFlea
    * @return
    */
    int fleaUpdate(Flea inputFlea);









    /** 1-2
    * 게시글 기존 이미지 삭제
    * @param deleteOrderList
    * @param boardNo
    * @return
    */
    int deleteImage(String deleteOrderList, int boardNo);







    /** 3-1
    * 이미지 1행 수정
    * @param img
    * @return
    */
    int updateImage(FleaImg img);






    /** 3-2
    * 새로운 이미지 1행 삽입
    * @param img
    * @return
    */
    int insertImage(FleaImg img);

-->
</mapper>
